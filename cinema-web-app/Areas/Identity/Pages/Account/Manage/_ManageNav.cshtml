@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="nav flex-column nav-pills">
    <a class="nav-link d-flex align-items-center @ManageNavPages.IndexNavClass(ViewContext)" href="@Url.Page("./Index")">
        <i class="bi bi-person-circle me-2"></i> Profile
    </a>
    <a class="nav-link d-flex align-items-center @ManageNavPages.EmailNavClass(ViewContext)" href="@Url.Page("./Email")">
        <i class="bi bi-envelope-fill me-2"></i> Email
    </a>
    <a class="nav-link d-flex align-items-center @ManageNavPages.ChangePasswordNavClass(ViewContext)" href="@Url.Page("./ChangePassword")">
        <i class="bi bi-shield-lock-fill me-2"></i> Password
    </a>
    @if (hasExternalLogins)
    {
        <a class="nav-link d-flex align-items-center @ManageNavPages.ExternalLoginsNavClass(ViewContext)" href="@Url.Page("./ExternalLogins")">
            <i class="bi bi-box-arrow-in-right me-2"></i> External logins
        </a>
    }
    <a class="nav-link d-flex align-items-center @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" href="@Url.Page("./TwoFactorAuthentication")">
        <i class="bi bi-shield-lock me-2"></i> Two-factor authentication
    </a>
    <a class="nav-link d-flex align-items-center @ManageNavPages.PersonalDataNavClass(ViewContext)" href="@Url.Page("./PersonalData")">
        <i class="bi bi-person-badge-fill me-2"></i> Personal data
    </a>
</div>